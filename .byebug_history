
exit
exot
c
exit
@subject
student
n
val
c
exit
row
row.first
row
val
c
val
c
val
student

c
message_params
exit
message_params
continue
@document
message_params
current_user
c
nc
n
c
n
exit
emails.first
emails.first[0]= "d"
emails.first
emails.first[0] = ''
email[0] = ''
students.each do |student| p true if student.email == emails.first end
students.each do |student| student.email == emails.first end
students
send_notification_preparation(students, emails.first)
send_notification_preparation(students, email)
emails
exit
n
c
msg.scan(regex)
msg.match(regex)
msg = "#carlos #afonso sporting"
regex = /#[^ ]*/
channel_params[:name]
channel_params
c
exit
channel_params[:name]
channel_params.first
channel_params.name
channel_params
c
message_params.first[1]
message_params.first[0]
message_params.first.content
message_params.first
message_params[0]8
message_params[0].content
message_params
c8
n
c
n
c
n
c
n
c
n
c
C
c
@message
messag
document = Document.new(name: message_params[:documents_attributes].first.second[:name], filetype: name: message_params[:documents_attributes].first.second[:filetype], message: @message)
message_params[:documents_at
doc = Document.new(name: message_params[:documents_attributes]message_params[:documents_attributes].first.first.second[:name])
doc
doc = Document.new(name: message_params[:documents_attributes].first.second[:name])
@document
n
document_params
document_attributes
c
current_user.studies.where(subject_id: params[:study].first.second).empty?
current_user.studies.where(subject_id: params[:study].first.second)
current_user.studies.where(subject_id: 6)
current_user.studies.where(subject_id: 7)
current_user.studies.where(subject_id: 5)
current_user.studies.where(subject_id: 9)
current_user.studies
current_user.studies.each do |subject| p  subject end
current_user.studies.each do |subject| subject end
current_user.studies.each do |subject| subject.name end
current_user.studies.each do |subject|
current_user.studies.subject
current_user.studies.subjects
current_user.studies
current_user.studies.find(3)
current_user.studies.find(4)
current_user.studies.find(6)
current_user.studies.find(params[:study].first.second)
current_user.studies.find
current_user.studies
c
params[:study].first.second
params[:study].first
params[:study].subject
params[:study]
study_params[:subject_id]
study_params[:subject:id]
study_params[:subject]
params[:subject]
params
Subject.find(4)
Subject.find(params[:subject_id])
current_user
@study
study_params
Subject.find(params[:subject_id])
@study
c
x
@subject = Subject.find(params[:subject])
@subject = Subject.find(params[:subject_id])
@study.subject = @subject = Subject.find(params[:subject_id])
@study.subject
@study
c
params
c
last_messages.map(&:documents)
last_messages
c
@message.documents
@message
@message.documents.clear
@message.documents.remove
@message.documents
@message
message_params
c
document_params
document_parms
documents_parms
document_parms
c
params
message_params[:documents_attributes]["0"]
message_params[:documents_attributes]
Document.new message_params[:documents_attributes]
message_params[:documents_attributes]
message_params[:documents_attributes].document
message_params[:documents_attributes].class
message_params[:documents_attributes]
message_params[:documents_attributes][:name].present?
message_params[:documents_attributes][:name]
message_params[:documents_attributes]
message_params[:documents_attributes][:name]
message_params[:documents_attributes].name
message_params[:documents_attributes].name.empty
message_params[:documents_attributes].name.empty?
message_params[:documents_attributes].present?
message_params[:documents_attributes].present
message_params[:documents_attributes].nil?
message_params[:documents_attributes]
message_params.documents_attributes
message_params
params
c
params
c
continue
@message.documents
@message
@message.errors
@message.error
@message.valid?
